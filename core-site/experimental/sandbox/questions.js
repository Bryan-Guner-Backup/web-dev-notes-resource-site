//!Question # 1.): What is the value of `foo`?
//* --------------------------------⇓(Code)⇓--------------------------------\\
let foo = 10 + '20';
console.log('foo: ', foo);
//* --------------------------------⇑(Code)⇑--------------------------------\\
// @ RESULT:
/*
foo: 1020 |
  20: 42: 56 | bryan @LAPTOP - 9 LGJ3JGS: [ sandbox ] sandbox_exitstatus: 0 __________________________________________________________o >
*/
//---------------------------------------------------------------------------------\\
//-===================END====================\\
//---------------------------------------------------------------------------------\\
//!Question # 2.): What will be the output of the code below?
//* --------------------------------⇓(Code)⇓--------------------------------\\
console.log(0.1 + 0.2 == 0.3);
//* --------------------------------⇑(Code)⇑--------------------------------\\
// @ RESULT:
/*
*/
//---------------------------------------------------------------------------------\\
//-===================END====================\\
//---------------------------------------------------------------------------------\\
// 
// 
// 
// 
// //!Question # 3.): What is the value of `foo`?
// //* --------------------------------⇓(Code)⇓--------------------------------\\
// 
// let foo = 10 + '20';
// 
// 
// //* --------------------------------⇑(Code)⇑--------------------------------\\
// 
// // @ RESULT:
// /*
// 
// */
////---------------------------------------------------------------------------------\\
////-===================END====================\\
////---------------------------------------------------------------------------------\\
// 
// 
// 
// //* --------------------------------⇓(Code)⇓--------------------------------\\
// 
// 
// 
// 
// //!Question # 4.): What will be the output of the code below?
// //* --------------------------------⇓(Code)⇓--------------------------------\\
// 
// console.log(0.1 + 0.2 == 0.3);
// 
// 
// //* --------------------------------⇑(Code)⇑--------------------------------\\
// 
// // @ RESULT:
// /*
// 
// */
////---------------------------------------------------------------------------------\\
////-===================END====================\\
////---------------------------------------------------------------------------------\\
// 
// 
// 
// //* --------------------------------⇓(Code)⇓--------------------------------\\
// 
// 
// 
// 
// //!Question # 5.): How would you make this work?
// //* --------------------------------⇓(Code)⇓--------------------------------\\
// 
// add(2, 5); // 7
// add(2)(5); // 7
// 
// 
// //* --------------------------------⇑(Code)⇑--------------------------------\\
// 
// // @ RESULT:
// /*
// 
// */
////---------------------------------------------------------------------------------\\
////-===================END====================\\
////---------------------------------------------------------------------------------\\
// 
// 
// 
// //* --------------------------------⇓(Code)⇓--------------------------------\\
// 
// 
// 
// 
// //!Question # 6.): What value is returned from the following statement?
// //* --------------------------------⇓(Code)⇓--------------------------------\\
// 
// "i'm a lasagna hog".split("").reverse().join("");
// 
// 
// //* --------------------------------⇑(Code)⇑--------------------------------\\
// 
// // @ RESULT:
// /*
// 
// */
////---------------------------------------------------------------------------------\\
////-===================END====================\\
////---------------------------------------------------------------------------------\\
// 
// 
// 
// //* --------------------------------⇓(Code)⇓--------------------------------\\
// 
// 
// 
// 
// //!Question # 7.): What is the value of `window.foo`?
// //* --------------------------------⇓(Code)⇓--------------------------------\\
// 
// ( window.foo || ( window.foo = "bar" ) );
// 
// 
// //* --------------------------------⇑(Code)⇑--------------------------------\\
// 
// // @ RESULT:
// /*
// 
// */
////---------------------------------------------------------------------------------\\
////-===================END====================\\
////---------------------------------------------------------------------------------\\
// 
// 
// 
// //* --------------------------------⇓(Code)⇓--------------------------------\\
// 
// 
// 
// 
// //!Question # 8.): What is the outcome of the two alerts below?
// //* --------------------------------⇓(Code)⇓--------------------------------\\
// 
// let foo = "Hello";
// (function() {
//   var bar = " World";
//   alert(foo + bar);
// })();
// alert(foo + bar);
// 
// 
// //* --------------------------------⇑(Code)⇑--------------------------------\\
// 
// // @ RESULT:
// /*
// 
// */
////---------------------------------------------------------------------------------\\
////-===================END====================\\
////---------------------------------------------------------------------------------\\
// 
// 
// 
// //* --------------------------------⇓(Code)⇓--------------------------------\\
// 
// 
// 
// 
// //!Question # 9.): What is the value of `foo.length`?
// //* --------------------------------⇓(Code)⇓--------------------------------\\
// 
// var foo = [];
// foo.push(1);
// foo.push(2);
// 
// 
// //* --------------------------------⇑(Code)⇑--------------------------------\\
// 
// // @ RESULT:
// /*
// 
// */
////---------------------------------------------------------------------------------\\
////-===================END====================\\
////---------------------------------------------------------------------------------\\
// 
// 
// 
// //* --------------------------------⇓(Code)⇓--------------------------------\\
// 
// 
// 
// 
// //!Question # 10.): What is the value of `foo.x`?
// //* --------------------------------⇓(Code)⇓--------------------------------\\
// 
// var foo = {n: 1};
// var bar = foo;
// foo.x = foo = {n: 2};
// 
// 
// //* --------------------------------⇑(Code)⇑--------------------------------\\
// 
// // @ RESULT:
// /*
// 
// */
////---------------------------------------------------------------------------------\\
////-===================END====================\\
////---------------------------------------------------------------------------------\\
// 
// 
// 
// //* --------------------------------⇓(Code)⇓--------------------------------\\
// 
// 
// 
// 
// //!Question # 11.): What does the following code print?
// //* --------------------------------⇓(Code)⇓--------------------------------\\
// 
// console.log('one');
// setTimeout(function() {
//   console.log('two');
// }, 0);
// Promise.resolve().then(function() {
//   console.log('three');
// })
// console.log('four');
// 
// 
// //* --------------------------------⇑(Code)⇑--------------------------------\\
// 
// // @ RESULT:
// /*
// 
// */
////---------------------------------------------------------------------------------\\
////-===================END====================\\
////---------------------------------------------------------------------------------\\
// 
// 
// 
// //* --------------------------------⇓(Code)⇓--------------------------------\\
// 
// 
// 
// 
// //!Question # 12.): What is the difference between these four promises?
// //* --------------------------------⇓(Code)⇓--------------------------------\\
// 
// doSomething().then(function () {
//   return doSomethingElse();
// });
// 
// doSomething().then(function () {
//   doSomethingElse();
// });
// 
// doSomething().then(doSomethingElse());
// 
// doSomething().then(doSomethingElse);
// 
// 
// //* --------------------------------⇑(Code)⇑--------------------------------\\
// 
// // @ RESULT:
// /*
// 
// */
////---------------------------------------------------------------------------------\\
////-===================END====================\\
////---------------------------------------------------------------------------------\\
// 
// 
// 
// //* --------------------------------⇓(Code)⇓--------------------------------\\
// 
// 
// 
// 
// //!Question # 13.): What will the code below output to the console and why?
// //* --------------------------------⇓(Code)⇓--------------------------------\\
// 
// (function(){
//   var a = b = 3;
// })();
// 
// console.log("a defined? " + (typeof a !== 'undefined'));
// console.log("b defined? " + (typeof b !== 'undefined'));
// 
// 
// //* --------------------------------⇑(Code)⇑--------------------------------\\
// 
// // @ RESULT:
// /*
// 
// */
////---------------------------------------------------------------------------------\\
////-===================END====================\\
////---------------------------------------------------------------------------------\\
// 
// 
// 
// //* --------------------------------⇓(Code)⇓--------------------------------\\
// 
// 
// 
// 
// //!Question # 14.): Consider the two functions below. Will they both return the same thing? Why or why not?
// //* --------------------------------⇓(Code)⇓--------------------------------\\
// 
// function foo1()
// {
//   return {
//       bar: "hello"
//   };
// }
// 
// function foo2()
// {
//   return
//   {
//       bar: "hello"
//   };
// }
// 
// 
// //* --------------------------------⇑(Code)⇑--------------------------------\\
// 
// // @ RESULT:
// /*
// 
// */
////---------------------------------------------------------------------------------\\
////-===================END====================\\
////---------------------------------------------------------------------------------\\
// 
// 
// 
// //* --------------------------------⇓(Code)⇓--------------------------------\\
// 
// 
// 
// 
// //!Question # 15.): How would you make this work?
////---------------------------------------------------------------------------------\\
////-===================END====================\\
////---------------------------------------------------------------------------------\\
// 
// 
// 
// //* --------------------------------⇓(Code)⇓--------------------------------\\
// 
// 
// 
// 
// add(2, 5); // 7
// add(2)(5); // 7
////---------------------------------------------------------------------------------\\
////-===================END====================\\
////---------------------------------------------------------------------------------\\
// 
// 
// 
// //* --------------------------------⇓(Code)⇓--------------------------------\\
// 
// 
// 
// 
// //!Question # 16.): What value is returned from the following statement?
////---------------------------------------------------------------------------------\\
////-===================END====================\\
////---------------------------------------------------------------------------------\\
// 
// 
// 
// //* --------------------------------⇓(Code)⇓--------------------------------\\
// 
// 
// 
// 
// "i'm a lasagna hog".split("").reverse().join("");
////---------------------------------------------------------------------------------\\
////-===================END====================\\
////---------------------------------------------------------------------------------\\
// 
// 
// 
// //* --------------------------------⇓(Code)⇓--------------------------------\\
// 
// 
// 
// 
// //!Question # 17.): What is the value of `window.foo`?
////---------------------------------------------------------------------------------\\
////-===================END====================\\
////---------------------------------------------------------------------------------\\
// 
// 
// 
// //* --------------------------------⇓(Code)⇓--------------------------------\\
// 
// 
// 
// 
// ( window.foo || ( window.foo = "bar" ) );
////---------------------------------------------------------------------------------\\
////-===================END====================\\
////---------------------------------------------------------------------------------\\
// 
// 
// 
// //* --------------------------------⇓(Code)⇓--------------------------------\\
// 
// 
// 
// 
// //!Question # 18.): What is the outcome of the two alerts below?
////---------------------------------------------------------------------------------\\
////-===================END====================\\
////---------------------------------------------------------------------------------\\
// 
// 
// 
// //* --------------------------------⇓(Code)⇓--------------------------------\\
// 
// 
// 
// 
// var foo = "Hello";
// (function() {
//   var bar = " World";
//   alert(foo + bar);
// })();
// alert(foo + bar);
////---------------------------------------------------------------------------------\\
////-===================END====================\\
////---------------------------------------------------------------------------------\\
// 
// 
// 
// //* --------------------------------⇓(Code)⇓--------------------------------\\
// 
// 
// 
// 
// //!Question # 19.): What is the value of `foo.length`?
////---------------------------------------------------------------------------------\\
////-===================END====================\\
////---------------------------------------------------------------------------------\\
// 
// 
// 
// //* --------------------------------⇓(Code)⇓--------------------------------\\
// 
// 
// 
// 
// var foo = [];
// foo.push(1);
// foo.push(2);
////---------------------------------------------------------------------------------\\
////-===================END====================\\
////---------------------------------------------------------------------------------\\
// 
// 
// 
// //* --------------------------------⇓(Code)⇓--------------------------------\\
// 
// 
// 
// 
// //!Question # 20.): What is the value of `foo.x`?
////---------------------------------------------------------------------------------\\
////-===================END====================\\
////---------------------------------------------------------------------------------\\
// 
// 
// 
// //* --------------------------------⇓(Code)⇓--------------------------------\\
// 
// 
// 
// 
// var foo = {n: 1};
// var bar = foo;
// foo.x = foo = {n: 2};
////---------------------------------------------------------------------------------\\
////-===================END====================\\
////---------------------------------------------------------------------------------\\
// 
// 
// 
// //* --------------------------------⇓(Code)⇓--------------------------------\\
// 
// 
// 
// 
// //!Question # 21.): What does the following code print?
////---------------------------------------------------------------------------------\\
////-===================END====================\\
////---------------------------------------------------------------------------------\\
// 
// 
// 
// //* --------------------------------⇓(Code)⇓--------------------------------\\
// 
// 
// 
// 
// console.log('one');
// setTimeout(function() {
//   console.log('two');
// }, 0);
// Promise.resolve().then(function() {
//   console.log('three');
// })
// console.log('four');
////---------------------------------------------------------------------------------\\
////-===================END====================\\
////---------------------------------------------------------------------------------\\
// 
// 
// 
// //* --------------------------------⇓(Code)⇓--------------------------------\\
// 
// 
// 
// 
// //!Question # 22.): What is the difference between these four promises?
////---------------------------------------------------------------------------------\\
////-===================END====================\\
////---------------------------------------------------------------------------------\\
// 
// 
// 
// //* --------------------------------⇓(Code)⇓--------------------------------\\
// 
// 
// 
// 
// doSomething().then(function () {
//   return doSomethingElse();
// });
// 
// doSomething().then(function () {
//   doSomethingElse();
// });
// 
// doSomething().then(doSomethingElse());
// 
// doSomething().then(doSomethingElse);
////---------------------------------------------------------------------------------\\
////-===================END====================\\
////---------------------------------------------------------------------------------\\
// 
// 
// 
// //* --------------------------------⇓(Code)⇓--------------------------------\\
// 
// 
// 
// 
// //!Question # 23.): What will the code below output to the console and why?
////---------------------------------------------------------------------------------\\
////-===================END====================\\
////---------------------------------------------------------------------------------\\
// 
// 
// 
// //* --------------------------------⇓(Code)⇓--------------------------------\\
// 
// 
// 
// 
// (function(){
//   var a = b = 3;
// })();
// 
// console.log("a defined? " + (typeof a !== 'undefined'));
// console.log("b defined? " + (typeof b !== 'undefined'));
////---------------------------------------------------------------------------------\\
////-===================END====================\\
////---------------------------------------------------------------------------------\\
// 
// 
// 
// //* --------------------------------⇓(Code)⇓--------------------------------\\
// 
// 
// 
// 
// //!Question # 24.): Consider the two functions below. Will they both return the same thing? Why or why not?
////---------------------------------------------------------------------------------\\
////-===================END====================\\
////---------------------------------------------------------------------------------\\
// 
// 
// 
// //* --------------------------------⇓(Code)⇓--------------------------------\\
// 
// 
// 
// 
// function foo1()
// {
//   return {
//       bar: "hello"
//   };
// }
// 
// function foo2()
// {
//   return
//   {
//       bar: "hello"
//   };
// }
////---------------------------------------------------------------------------------\\
////-===================END====================\\
////---------------------------------------------------------------------------------\\
// 
// 
// 
// //* --------------------------------⇓(Code)⇓--------------------------------\\
// 
// 
// 
